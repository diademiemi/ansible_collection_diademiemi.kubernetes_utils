---
- name: "Add cert-manager repository"
  become: true
  kubernetes.core.helm_repository:
    name: "jetstack"
    repo_url: "https://charts.jetstack.io"

- name: "Install cert-manager"
  kubernetes.core.helm:
    kubeconfig: "{{ kubenetes_utils_selfsigned_ssl_kubeconfig_path | default(omit) }}"
    chart_ref: "{{ kubernetes_utils_selfsigned_ssl_helm_chart_ref }}"
    chart_version: "{{ kubernetes_utils_selfsigned_ssl_helm_chart_version | default(omit) }}"
    release_name: "{{ kubernetes_utils_selfsigned_ssl_helm_release_name }}"
    namespace: "{{ kubernetes_utils_selfsigned_ssl_helm_chart_namespace }}"
    create_namespace: true
    values: "{{ kubernetes_utils_selfsigned_ssl_helm_chart_values }}"

- name: "Add self signed ClusterIssuer"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubenetes_utils_selfsigned_ssl_kubeconfig_path | default(omit) }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: "{{ kubernetes_utils_selfsigned_ssl_root_issuer_kind }}"
      metadata:
        name: "{{ kubernetes_utils_selfsigned_ssl_root_issuer_name }}"
        namespace: "{{ kubernetes_utils_selfsigned_ssl_root_issuer_namespace }}"
      spec: "{{ kubernetes_utils_selfsigned_ssl_root_issuer_spec }}"
  when: kubernetes_utils_selfsigned_ssl_root_create_issuer

- name: "Create self signed CA certificate"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubenetes_utils_selfsigned_ssl_kubeconfig_path | default(omit) }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: "{{ kubernetes_utils_selfsigned_ssl_ca_name }}"
        namespace: "{{ cert_manager_namespace | default('cert-manager') }}"
      spec:
        isCA: true
        commonName: "{{ kubernetes_utils_selfsigned_ssl_ca_common_name }}"
        secretName: "{{ kubernetes_utils_selfsigned_ssl_ca_secret_name }}"
        privateKey:
          algorithm: "{{ kubernetes_utils_selfsigned_ssl_ca_algorithm }}"
          size: "{{ kubernetes_utils_selfsigned_ssl_ca_key_size | int }}"
        issuerRef:
          name: "{{ kubernetes_utils_selfsigned_ssl_ca_issuer_name }}"
          kind: "{{ kubernetes_utils_selfsigned_ssl_ca_issuer_kind }}"
          group: "{{ kubernetes_utils_selfsigned_ssl_ca_issuer_group }}"
  when: kubernetes_utils_selfsigned_ssl_ca_create_ca

- name: "Add self signed CA ClusterIssuer"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubenetes_utils_selfsigned_ssl_kubeconfig_path | default(omit) }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: "{{ kubernetes_utils_selfsigned_ssl_signed_ca_issuer_kind }}"
      metadata:
        name: "{{ kubernetes_utils_selfsigned_ssl_signed_ca_issuer_name }}"
        namespace: "{{ kubernetes_utils_selfsigned_ssl_signed_ca_issuer_namespace }}"
      spec: "{{ kubernetes_utils_selfsigned_ssl_signed_ca_issuer_spec }}"
  when: kubernetes_utils_selfsigned_ssl_signed_ca_create_issuer

- name: "Generate SSL certificate"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubenetes_utils_selfsigned_ssl_kubeconfig_path | default(omit) }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: "{{ item.name }}"
        namespace: "{{ item.namespace }}"
      spec:
        secretName: "{{ awx_name | default(item.name) }}"
        commonName: "{{ awx_hostname | default(item.name) }}"
        dnsNames: "{{ dnsnames | default([ansible_fqdn]) }}"
        issuerRef:
          name: "{{ item.issuer_name | default(kubernetes_utils_selfsigned_ssl_signed_ca_issuer_name) }}"
          kind: "{{ item.issuer_kind | default(kubernetes_utils_selfsigned_ssl_signed_ca_issuer_kind) }}"
          group: "{{ item.issuer_group | default('cert-manager.io') }}"
    loop: "{{ kubernetes_utils_selfsigned_ssl_signed_certs }}"


...
